name: Docker (multi-arch)

on:
  push:
    tags: ["v*"]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags

      - name: Create Draft Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          IMAGE_URL="ghcr.io/${{ github.repository }}:${{ github.ref_name }}"

          # Generate the release notes from merged PRs since the last release.
          # Then, append the Docker image link to these notes.
          # Finally, create a draft release with the combined content.
          gh release create "${{ github.ref_name }}" \
            --draft \
            --generate-notes \
            --notes-start-tag "$(git describe --tags --abbrev=0 --exclude '*rc*' --exclude '*alpha*' --exclude '*beta*')" \
            --title "Release ${{ github.ref_name }}" \
            --notes-file - <<-EOF
          ---
          **Docker Image**

          \`${IMAGE_URL}\`
          EOF
